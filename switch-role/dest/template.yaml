AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  SrcAccountIds:
    Type: CommaDelimitedList

Resources:
  LambdaBasicExecRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  SwitchRolePrincipalHelper:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import cfnresponse
          def handler(event, context):
            try:
              src_ids = event["ResourceProperties"]["SrcAccountIds"]
              response_data = {}
              response_data["Principal"] = {}
              response_data["Principal"]["AWS"] = ["arn:aws:iam::{0}:root".format(src_id) for src_id in src_ids]
              cfnresponse.send(event, context, cfnresponse.SUCCESS, response_data)
            except Exception as e:
              cfnresponse.send(event, context, cfnresponse.FAILED, {})
      Handler: index.handler
      MemorySize: 128
      Role: !GetAtt LambdaBasicExecRole.Arn
      Runtime: python2.7
      Timeout: 10
  SwitchRolePrincipal:
    Type: Custom::SwitchRolePrincipalHelper
    Version: 1.0
    Properties:
      ServiceToken: !GetAtt SwitchRolePrincipalHelper.Arn
      SrcAccountIds: !Ref SrcAccountIds
  SwitchRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal: !GetAtt SwitchRolePrincipal.Principal
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AdministratorAccess

Outputs:
  SigiInUrl:
    Value: !Sub https://signin.aws.amazon.com/switchrole?roleName=${SwitchRole}&account=${AWS::AccountId}
    Description: Give this link to users who can switch roles in the console
  SwitchRoleArn:
    Value: !GetAtt SwitchRole.Arn
